<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAEAGAAoMgAAFgAAACgAAABAAAAAgAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAyDdEdB74nDNIgC8szC9EWBsE+EdckB800Es8nDsQpC8wjCc8wDtQzDtQwCc81BswiBcUoCsYbCbca
        BbMfCbQfDLQTBKkQB7EQCawRBrAXBa8cCbUkHqIsK6BDUJxhdbVngLFwjLt3lr58nb1zmbt9mriVtMyT
        tcydvtWhv9GYt8ijw9eavNKPscaKtM+MtdGDqsZvjLJgd7AsO3s2QY8aJ14KIk0OIEcQGEwSF1oTF1cL
        GmYEFmwHFnUKInwJLXs2B8o7FdkrC8keCsEpEck1Cb42DcgaBL4IBLUjBMQZBMk6E9sbCMw4DdZEENop
        Cc48CtAwC8snEroNBKwHA5sGAo4JBJEDBI4RFJk4Sq06VbIkQZ9pgsVCWKRGWK5YaLZfb75YX7M6Q5Iq
        NXw0SodjgKqEpr+Nr8aStMymxNWoxteoyNufwdiXudCWuc2jxdmavdKYutSJqMl/kchnaM9SU78uOYUq
        LF0RF0gZFWgKEz4QGFwIFVwKHmsGIW8EKndGFdcvB9Q0D9E9DtcWAsZQFtwkCs8wC9MdAsAVBLwYAsYi
        B80nBMslA8g3FNQiBMMpC8orBMIAAZ0KA6AGAo4GA4gGAIohM5BUc6pnjrJ0ortwnriAs8F1n8FKYrEk
        HK4YC64RAJQHAG0CAkUDC1c2T4JoiqiDp7+FqsCgw9Kuzd6pyNufv9WgwdepxdK00d2ty9mmydecwM2T
        tMd+ksxygsZpaM8qH7s0E8Y0EdAbDKQaFWsOE2EGEVYKGWUMJW4SA6k+FtM4DskoBs4xCtMpCc4pDdMl
        DdMzD9MfBMYcAscRBclLE94jCdQ5EcwNCbwSA7IWAqkEAXwAAWoAAmEGCm0RIYQkQ4FkibRznriItcqC
        r8SCs8iSuc+fvtdhb8IXB7MLAJwEAXYECVMPGWA+TohScZhokKt5pLWLusimyNiryNmjwtOwzuC00Nq2
        0t200dypydStzdeYvs+Fo8tvhsN+idJCN8RGK9UqDsAkBcQoB8gdBcoWDLkLEp0KPGY4E9ExCNg/GuEd
        BsxCD9kWA8giBMsgAsYqBskiCsoLBMc7B9EVBsorDMQrEMUMA7cQCKcLAoQGAWoDAWQDEW1DZKZ4nr5u
        mrJtmLF+qsKOu9CBrsN0prqOtcufvtOjxN0pLpwAAHQWI387WJk5U4tObJhaf6JokKx1oLGEssCfwdGl
        wdKlw9Sz0eO51eC41N+2096szNew0NuoyNWeu9KatNSQp89rcM5CN80sFLszDcMnBcwfCsoOA7EMBbkF
        JYEdCL0UDKYLBLEzDtMkBspFF9gdBMdQC9lCC99HFN8hCMwgBcoiAcciB9AfAscoB74jB60OCH8HBU4C
        AlQWMIBYfLGCrb51oLR9p7t/qL+MtsuGr8Zxo7R/sMGGtcaewdJyjLYkPIFIa5xplbKKs8p/qL+UtsuF
        pbd5map3m7SFsL+Pucifw9S31N7A1+PA1+O+1uK51uG00dyz0NuxzdmsyNSnwNaXqtB4gM5LQcYyIcA9
        EMwgBMgMA7oEAbkDIpENCa4dCLMuEdktCs84Dt0dBsAvB8spDNMpBdMuDNBRFeAjCM5EDtklBNBQGd4o
        BsEbBqEDBFgEA0UEB1omQYtZfa11oLp8pbuFrsSHsMaNtsyKs8mErr6LtsaRu8uXvMudvtloi7hpkbZ9
        p8OPuM6FrsShwtWpx9iEorJvkqZxnK6Hs8aewtS31NzA1eLB1+O+1eG/2+a51eCzz9q20t210dyyzdmt
        xduZrdtdYb80J7gzEccpEskZCcAOAcMJHZoNB7wrC9MYBboLCXEPCaA2DM1EDdUiA8k3DNU3D9E6CtIm
        BswVAsYWBrkeB64cBqUPB40CAlYHBEkOFGI0UpNeg7B1nL+Fr8SHr8aOtsyPuM2Tu9GfwNKfwdKkxteV
        vc+jy9d6pbxynrh/rMaMs8mNtcqev9GqyNiqx9ifxM9vma1wnLObwNKwzte/1uHF2+fA2OO/3Oa+2eS3
        09282OO+2uS62dy30d+nw9aAksc9NrhBOccdBsAhBMoYAMoQGqEsC9EZBtIEB5IUDKIcDMpAFexFEOFF
        D9xLEeJIFORGDtY4D9c1F+BXGN0zE8klDaYNA20AAjsBAi8bK25Tcattjbx+ocaAr8OLsMeVuM2cwNCb
        v8+lzNWpz9mhyNKUwM6gyNeArcF4p7uBscakwdKoxtenw9CwzNe20d2xztmYvcdaiZaOvMukytS51t2+
        2+LF4OjH3ubD2eK/3OK72d6+2+DD2uG/1t62y9uSqNBcZ8pMSsQyD8wqB8sUAccGHZomCc4oC9kRA7Ib
        BsYSB8kXAsIOBcpLDd8uBdNMDd8pCdIzCtA8C9EYA8InB74WCKMMBWoCBCoLCUI3R4ZbfaptkrV1n7eJ
        rMOIsseOuMuavs6Zvc2jytOexc2TvMWEuMWmx9eRs8mFp76bvtWrydmxz+Cvy9i30960z9unz9iy091z
        mql8qrmfxc6309q72N/B3eTH3ubG3eW72d6+3OHB3+TG3eXD2uK3y9uUqtFhbM9OUcgqF9AaA84RAMkP
        HpMtDtIaEMweBbhNHuUoB8cpB89IGuUnCdY0CdsrCNI0B9g9CtQtDMtBDtYuDMsZDKgEBmQIATcMEkJb
        bZ9sjbF3n7mErMSMs8mBq8CGsMSYvMyRtcWhwtGawM6KtcKPucmkwdGSt8iCqbqbwtK00Ny41OK41N66
        1t+20tqqy9W2096RtMF3prSjwNCxzte3093B3ObJ4OfH3+W9197C2+LG3+bF3ePA2N6sy9CImdBxf8pZ
        RdMhC8gEAsQTA8sJI4EdCckWCcUVB8MUBsQTB8cMAbwVA8UNAsctDtIUBb4pDsgdBMVFDdwyCs4tB68O
        BXsEAkERCjUjNGFcd6J1mrt6ort/p8CBq8CErcOJsMSXu8uZvc2mxdaav8+KtsSYvc2rx9eVuciLsL+f
        xNO00Nu41N+82eG92uG41duvy9a3096uzNmCrryXusu10dyyztm71uDF3eLA2N6+1d3F2+TI3+fE3OLA
        2N6mwdZ8ic1oaNFDH9ccAdQTBdAaBM0NLoUMB8IpCdMUAsgYBckjBsgwDNAVArlGEsslB9UhBcoLA8Ia
        B8ENA7dLE8kVCa0SBYMFBlUZHmNJZY9ghrBxm7t7o7x6ort1nrR+p72Cqb2OssKUucmgwNCYvs2Svsyg
        xtatydmatcafvM2ryNmwzNezz9q309y209qwzdSvy9a00Nu40d9+pbSMuMevytW00Nu71t/F3eLA192/
        1t7E2+LD2uK3z9WwyM2iwM2PqMpQT748F9IRAsYfA8sqCNQHKoAjCsgpB88lC8FEF9wZAcoMCLwRA8Me
        BcwOBbcYCLIwC9JCC9Q2C9IvEr8MBp8LAW8dH3M5TIZYb6h1jr17nr50nLVhiaJUd4xmip9ZfJFUeZFy
        nr+BsMaSvMqkyM600Nuat8Kjv8qqxtGwzNeoxM+00Nuz0tyy0t2tzdixzdi71+LB2eWfucSdv8qwzNex
        zdi41N682eC41dvA1uLB1+O4z9tjfYQXLCMxRUWfvsuQrdpiaNIiCs0tCdIjBs4FLokjEM0cBcAaCsYk
        CsoIA64cC7oUBbsRBL8NArc5E9FYJe5CFN1BEtwtBcUUBqQLBGAVG2JdcKp1kL52lLeApL95obpdhqA4
        VGAoRFFOanZOa3tpjqdml6yJtMCmys+mws17l6KlwMuqxtGxzdixzdivy9axz9qqytWmxtGuytW82OPD
        3OivyNSfwMquytW3096tydO31Nqz0djF2+fA1uKftMAnOTggLRsGFwBkeHHI4uewweYvIMAdANQeBM8F
        KnwnB8MQA7EgA8dBId4YAqkGBrMEArMTCsEQBMIkB9MpCdU1Ec8fB8owEdENBJ4JDWIrOH1Xb6tvjLKA
        oLyCpbx4nLRzmLB8l6NXc4AzTVk1TlxLboBbiJeNuMOnztWxzdiCnqmUs76hwMurydSryNObvceUt8SZ
        u8mcv82kxNKtzdu+2eaxydWivcedwNCty9ivx9KzzNa91uDD2+e60t6Em6YqNCkyOikIEAAcLSS82ODJ
        3+o8QLATAM0iBdILLnw5FdITEb8TCMYQBb4GA7MhDMoRBsENBcAvF9wcB8MUCqYYCrIhCcwqAsYZBZ8N
        FWkzRoZQcKVvi7B8m7h7nbNoiqFxk6p8maqCoLJwjp9ceYpjhJV3m6SMr7mw0t2vy9Zog46LqrWZucSm
        xtGkws2awMqLsb+VucmIrLx/obGWuMmz0N63zdmovciMssesydi5z9q2zNjA1uLD1uK/0t5+kZwtQElF
        WWJpdYZnfYSv0OaQk+kvEsYlCc4iBM8QNYIcCckqDMYeB7cjCc0ZA8kaAsobAcofA80UANAPCakLA5wh
        CsocBMk4FsQUDYEuPX4xSX5OcZthfaOBob6CpLp8nrVcfpZMant4lqeIqbmEpraetcenvsqyyta50t6U
        sLuIpK+KqrWWtsGlxdCmw86XvMaDqbdfg5M/ZHRcfY5sjp+qx9a/1eGlusSIr8Obuci70ty+0+DB2OPQ
        2OfZ4O/O1uW1ydyzxdagu9eMnttMSctBFtUeBdYiBc8mB9QMMX45E9YvE8sbBLVBDtkeAM0YBctBEdg9
        DNkxB9QWBrksBcoaCMwiCqcGC2UMEUMnNFg7SoNIZ45thad9mbGBorODp7eGq7uJqbR+namQsb6MsMCT
        t8evy9a30t2zztmducSNqbSGq7SVtsGkvsqJsrtwmKFUdX9hfYiGoq6PrK+syc3A29240duAmrdlkqOT
        tsirx9i20t3K2ufQ3+3T4u/L2ufE1t2pwdiIj9pBLsc1G8kxCdQbAc0fAs8kA9MKLYASCccOBLkjC74b
        BcsaCdQ7DNsTCcUeBdAWAcUdBcESB7w4EtAMIHMuP20fK0QaM0s9UoAlPVpRaoxzj6d+oLCEqLiIrL2V
        tb+dvciOr7xxlaV+o7OyztmwzNenw86tydSatcCNsruWtsGtyNOZt8KRr7qVsr2lwcymws2sx9Shvcq0
        0dy71uSInbJfh62QsMupxta10dzG1uPN3erR4e7H1+W+zd+ftNVvbdMzFc0tB9IrD9UrB9YoA9UuA98P
        KIYfCcsaDsYcCLo0Cc49D9wkBtUgBclFDd8gCMckCcY4E9IaBskcFVYrP2EiLUYeOktAVX0hNFI3UGdm
        gJdnh5pqjZ59oLObuMSgws2TucWFqrqSuMiev8mfwMuhwsydwM2iwM18pLB/prOXusemwcmpw8ysxdKo
        xNGLrLlumKZtlqSPtMK30t6svdBCZZuWsc+wyNS409zG2eTP3+nP3uzH1Oe1xt+gstxtZdZCJtshA9An
        BtEiBc8cAsUpCtYNL3w3Ed4nBcYcCMBVKekjBMwcBcwxC9YsBs8UArwZDcEVAbUiCcIRDUYjMUwtNVEz
        S1g8T3Q0S2URJShLZHJHY3QoR1ZKaXeHpLaGrr5+rL15pLmDr8OCr8F3pbZyoLF4p7uFp754pLltma5p
        lquVt8GcwMmhvc2UscKRs8SZucKfv8q40t+/196Robllhraiute5y9i70N7D2eXF2OPG1uq6x+WrwOKc
        rNxiVc84HcoqBdo3Cd0nCtIZBMMmAtIMMn8mA95KHOYgCsckBsMuENkjDcsNAr0hDMsWA8AqD8UVA7oY
        CbUJETIwOE0xPV8lP04sQ2AZNzksODMaKzA7UFgYLzQoPUBFaodTgpxViqRhlLFmmLValLVOiKlEf55a
        kK1znbt0nb1znLtrlbR+qLyBq8B+pbaBobGrw9W5zNi90d3B1ePE2+GtvtZ/mb+btdKrxNu0xt25yuK2
        0OSvxuWrv+acqt6bqdtiVs5LJNQ+AdozA9ghCM8fBswpAd0MKn88D+IjCdYWC7lHIN0PA8YxCssnCMEV
        BrwfCcgGAbIRA64eBbQFEicsM0Y8T2AlOE0vQlEOJiodJhgbKC8bLzcNKy4ZPEkgU28nWnQzaYg1cJY+
        eJ5DfKlEfKlDe6lOgqxhlL9pl7prmbtyocN9r8KDq8CCrb+Hr8CgvM+tyti00d+31OO91uissdx3esGG
        jcWjstuUp8yhs9mgvteevdaKnNt9hdiAhdxlWtc7Ico0C94lBdIcBM8mA9IsAdMQG5MlCtpOEOImD78U
        Br8oCdBHG90CA7g6EcsKALscC78fDLcoCrsDFCkhKzckNUscMT8QIzASJTMSHiEPIy8OJTUZM0keP10d
        Q2koTXIgSW87a5REdJ1RgqhcjbJjlLltm713pcdtm71rmbtvnb96q8dxo79mmrR5qMGApb+GqsGTuM2l
        x9q30OKmq9VkV8tmWcuBgdCHi9x+gtOCiNCTnNp9e9hhSN1eQ9xiQ+E7HNEfA88mA9A1BtQsA9QyBtMP
        H4Y4Dt8aB8wKBLAmD8wSAcUaBMUmDcIZBr8SBL0WB7wXCbEiCLYFECcUHyEhLkMbLToJHCgMHzIRIjsS
        LT8RKkAYMVIvUoA9WYxMaZlcfahWf6Vqk7pplLJrlrV8p8Z9qMV6o8Bsmr9vncNtmsBkl75Hg6dYlLNn
        mrd9pMSNt9KLtM+Nssujv9KuuOBiRtpLK9FoWNZjTuFeQttcPuJkSN1bPOJNGuc7Ctw/EtQoCsocBs8h
        A9JVE+cxBNUwCM4VJ4AdB8wdD8MhCbtEDNQQAMldH+0MBrdRDtwaA7AjDcUZCa8dCaQCESUTHBoRGSIQ
        HycLHi0OIz0MIEULI0ESL0kSNFktW44/aaVCb59Dc51PfatQf6xSgqhRgqlXiK5SgaNXh6g7apVNfapZ
        iLZIgKdRiK9hlrKGs8yQssyZw9iOt82JsMuSucuUr9NzVOBPLNVKLdVvMOJPG98+ENlYHugyBc48Dd4p
        ANUpBNkUAsYiAdM+BuE3DeUdBNEjB8sVKIciD8oTBLs4Ec47CdAhCNA9Ctk2B9MZBcoqCLQWBLQVA7IW
        C40LGy8LHSMLGSwIHjIJHC4MGScXGjkNIEEOK1YbPG42WY8vVpNDbqBDcp1AbplEcpxLe59FdJlFdZpO
        fqBNfaBWiKpFeJlPgqNdjKlhkK5rn7iFs8yYutWTvtSUvtSYu9GdwsmIr8p3gtN5eNhdPuJoJPFKDOUy
        BdlLDuM7DeAsBds5Cto4B9shBMo3B9xDBuInA9wqBdsvAtUaKpUkDcpNGtwaA8QOAcU/FdwoEN4aAsko
        DMgRAK0YBb0mCLERCWwVLDILFzELIzwHGz4ADykXJi4bKEggQ3gaRIQxWpI6ZZREb51egqhzl7R5pL9z
        nrhumcFql7dvoLh4pL53o7xvqb92sMdrp76BscaIus+LtMaWvM2dwdKiwdKhwNKZvs6Uws+LusiNp82A
        lslYStFTH99KDeNWE+U2B9k1BNhLDek+AtwtA9YqB9UUBNFICeBWEuo3Bt0yCtAkKpI4Ddw4Dt0lBs9R
        FOArB88bBMwZBMMVArcjCbYbAq8SA5MHBFEFERYKFysHFikDEyMIGC4SIUEfN2kpR4McPnopTH4oTXRO
        dZlZgaVXfqJWfqJXfqJOeaNbiallmK9dl6xxq8F7r8aAs8qEuM+Ruc6Qt82hx9iYvMygxdWmxNWlw9Sl
        xtedw9OdxNKZt9SLqMmAidZ3YdtcOts9ENpTFeE8D9g5BuBRDOgyB9ocBNIrA9QsA9VNEOUqA9ZND9wl
        KJ8jDM0mCsw2Cs8pBsw2B9EmB8wUA7sQCbkHAqkJB6AGB4AFCkIVGyEFEhwHChUHEg8KGCwYKl4RL3Mv
        SIc7VIk6V4Bmh6hmiadTfKNGcp41WoZCZpJLeKFikbF1qL6ItMuLts2RvNOYwdmcxt2qyN+nx92lyNmk
        yNeewtKjwNKsytyuy9yrx9isydmjxNibv8qnyNalutKDiNRgPttMIOFHAN9EBOAvBd0jBtcyB9gyCdkw
        A9VjFe5FCd85BNUqGqUzDtcqBdEzEc9GHeIgBssoCNIaCrwRBrgKAq0OA5cFBGkCCjgDCxsHCxgFDQwG
        DxkOHUEVLGghQH02WYo7W4RUc51FaJlJcZg3YIc/ZYs/ZYNVephSiKdporiCvMmRucmevM6hxNSkyNit
        0eG309210dyx0dytztmoy9SoxtysyuCxzt600Nuvy9amydOsztiuztq00eG31OKfnN9nQdw1EdhZFu5k
        GvM9Ct0pB9YhB9Y1A9dQE+ktBd8eBcodFKQrCtNCEN4eBcIOAcUcBsseD8sQA6kfC7UTA6YFAYoFAl0B
        BSkABgwEDAwHCxMIEDQHGU8SMnQgP3srToA8ZIwnTG48XXoyU3IuT24rTGw2XHtVe5l0n8B9q8KAscF+
        sMabwtqhxdamytqu0uK92OO51eC91eHB1+O70d690+C70d3C2+e41eCwzdi909/A1eK80t3H2uLK3eXK
        2uecotxQHdNTDuY8BNlNEOY0CNkzCttCBdo1CtwoANoiBtQfD7NID90vC9sOBcYXA8QwCdIXBcAXB7MV
        B6kPA50RBosFAFcGBSICBgkCDQcDECsJIGEGI2ULKW4dN2ouS3U0UXE3Um1HYXtdb4N1kKNSd4seQFk+
        VW9ThJqDs8iDtMd4rL+Bq7+Mt8mIs8Sjz+DA1uHG3enA3OjF3OjP3OrG2uHA09vJ3OXE2eG+0tm91ea5
        0uLH3ezK2uXP3+vV5+3I2+ZxVddPDOZCC+Q2DdMxCNZLDORSDelEC+U4BN47BNcaBrwpEs4zE9k4D9E/
        Cs0mCM8kBsQWBbsHCZoNA5kMA3wEA0wBAhQCBggBCBMKGE8NIW4NJGoMJmQJIVIVMVgVMEofOEwzTGFc
        c4VVb4B5lahif5Y9V287ZXpslauQuc6sy9i90t+z1OC12OOy1eDG2+fH3OjE3OjE2+fB1eGguciassGY
        s8KNqriLp7WivM2rxda1zN2/z9zN3evO3+fR4+qVjd9XINtSEeooDs9IEN9QE+pBCuRKB+NXEeozB9Iy
        EsY6D9hECd1GEdwRCMQ5C9QHAr8hC8oSBYcJAJIDAGcAAjYBBg8CBwoECCoDC2EHDmYMGGEaLGAlP3E8
        WIA2U2cYNT4xTVdkh5eDmqyaqr+VrMV1mLBIZ35RcYiCoret0tPH4eTO4ufO4ubK3+PN4/DH3+vF1OK/
        0+CIqLKPrseCobiOssl6pbuHs8mlv8+ctsectMS5ydbB0NzD0uHM3ubAyO2FUulXF+1HFds1CtY4BdtU
        DupCBeJBD948FNQ9GcMzDdslBdIuCNYtDMs0B9AmAbcyCboPA5MKA4gCAkoAADQCAwcCBxYFCUsGEF0B
        E2UFHmMIJ1seMlw+WHc/W3gvSV4jOz1OZHGPpbGcsr2xyM+wxs2HprdCYXJRb3+lwcy92uXL3uW409e2
        2t7F4OzN3OnI2+W809u0y9KhwNKjwNGpyNqjw9WdvtCwxtG60NypvcuaqsCnwNa7yd3K2+XM3+NwV95h
        MONFEd9HCN9LCuE5CdxKG+NSFeI2AtU0EM8/Ed09C9dUFuJEDsowDs4mCrMkDb0QA54JBHgBATwCACMC
        AA0CBToHCk4GElsHGmIRL2kdQGgeM101T25kfJNcdIZKaXRDWWV2jJiXrbiwx8+0ytKUtrxzlZwvUFdc
        eIOfu8ay0d6iydaKvcet09y61eG/1t/A19+4z9aVtMWKqLmgu8imvseowMm80t61y9fH3OeHmKh0iqiW
        q8mguMu51N+bmtp2P+BDC+ZYF+xKENteHeZFEOJHC9pADNw9HNRCD984CddFHN9DCtEaBMoYBacgBrQJ
        B5UIBmsCATIIBB4EAiUHB08DCEUCD0wHH18cOG8oQ287UnZRaolTbIBKZHFQbnsySFJSaXOUrbeYt8CZ
        uMGsxMOkwcZoiZMiQVJXdYaAo7mSutCSvdKSw9Gy0dzD3+bE3uW/0dmUs8Oy0eCuyNPE192+0da0yNDH
        3OTP4um9z9mNnrdaaoNgeJSKr73H1dyWieRiOdBYLNljJuVKEdCALvFPHdgtDtI0FMRNFNUzBstVFtUT
        BsVCEtoZCasTB7ACAoUFA2AEBCoBASQHC0AGDlMACkIADUUNJmEuR3tHXYlTbodxjKZvi51JZXBee4ZR
        aHAiOUFTbHWLqLV+nKicsrarxMyJpK9MaHYhPEo0W2suV2hReYlnlKirzNiz09m61dzAz9iUsLurxc/M
        4+zQ4unK3OO6y9K5y9LC1NrB0tq3xdlpeYwQJUSOsL7X5OrR2e1mUsNGIsxTMNJWJ9lAC9NNC9pFBeA7
        DtJEGNVSDuQ8DtY9Cc8bBskwDrIlB7MSCY0ABVYCAh0CBDkHE08AD1EBCUICDkcYNmc7WYJVb5BefYt8
        nKl1kp9mg41Sb3qBmJ9KYWkuRE6Bl6SJnqtwjp2Zsbepu7qxx8y1ys6busKIqbCDpatdgpl0nKapzNG0
        z9XD09y90NDD1tasv8HV5u2yxczN3+bL3OTY6u/P4Oi0wdWKqbhab461zd/e7PLh7/bHx953XrpsRsxP
        Pc1xPNt/OOJTIN5KKdJACtklBtFCE90gA7Y8EtMkBLwfBrgGAoAEAUoCAiQCDVUJFF0AClIHCDcMGkMx
        RHdFW4VfeJlph5d8mquAmqh6kJxdc39tgpJ1jJIpQj5BWVd1lJ1wi5Zzj5uHo66Wsr2Pq7eIqLN+nqqK
        qrSMqLNzj5pqk5umxtHG0N7E2NmNpqi1zs7P4+K9z8+huLnB2NrN4+jR6fW60t5MVW1ido/Y6eHw9P3o
        6/afnN5rStRwSM15RdptO+RlLuRjMd9SMMtdFOYoB9MqBM8jDMoUBMsQBagtD70BBHMDA0MDACwFDlkX
        JWUOIVQDBywMID47UXpKZIJdeo9mhJWAnq+KpLJ5j5tgdoJUaHhqg4dAWFEwQTdHX16EoKuUsLuOrLdn
        kpp1oKmAoaycvMaTs75zj5p5laB0lJ9ti5auxNCmuLq+2NqRrbKpxM2Jo62Tsr2z0NrL5vK3xNJHU181
        WohPbpbo9/bw9f3s7/vFxuOXgsWshtx6YuBzOdltJ+xFCtZGGtNDE9w5BcxYGuNADcg+FNQrFLQLB6QN
        AGQAATkGADYDBmEHElwAD0YDCSgJGSooP1xSbIRvi55xjp53k6SKpLKHoKx4kJxXcIBge4Q0TEssOzFC
        VE9WcHh1kJeXsrmkwcikwciSs796m6eFp7RvlJptjJRxj5qAnal/naq0xMqxzNCXtr2ryda00d6v1+Jl
        hpcpP1MhMEURFytUg7t2nsrl9Pjv8vrJzNeOf8VKGttxNNmGSdeLUdhnL9RnNuNYN9NxHvBXE+MkCtIk
        DcUWBb8jCrIXB54BAWECAjgEAjsDCGAED1YBEEUWIEI+T2E0TF1geY5pgpZ0jp56lKV6laOLp7Jfe4ZZ
        eIdqiZhdeYQwRUg8UVVuh4mCm52lvsCiwcKy0dGrytSaucOUsr2VtLiatbuuuMOGkpx6k5yqvMCpxMxn
        hI91kZyZtMCItbl8na41T2QeN0xBZpJei8FwlMDT3+vF2eOTn8BOPaBeV7trKOlXDOZXCNlzTdxuPOA/
        EMhGFt8lBMgsCs07EcM5Esc+DsYPB6YDAWkHADUCCEAVHXMXI2gPIlZIX4BMYoWCn66Zt8BtipN4kqR6
        lKaEn62Bnahzj5pmhZWBoLB8m6pefIpAX206U1VqgYOzy83E19m9z9K9zM24x8nU4+PN1t6twciasLGP
        m5u/xsjW7OaEnqtSboA+WmZog49piI9hhJRSepBagZxUfJ46apFnkay2x8J/l6FwdbkyJLcuDsVRNMpt
        T9RRDdxNBuNhGehfLM5/KvEwF9syCdBGCdQ0DscXAbckA68FA4IGADgIDUMiHoMUJXEUIFYjN2mjttC8
        0NK90NOOoaNshJWKorGHoKqDm6CQqK55lp17mJ6duL+gtr9le4NBWV8/V11thYypvsmrwsO/0tbS4uOJ
        m6+GsbCry76Jw7troJATEQQnOToxSVNadH2DnJ6DpKSGp7J6o7aArsh/ts53sMiLqsiPqsJ8k6Z0l7IX
        E44vC85LD95jFO9KGtmXcd57P9V6IPJOHd8rDNU6B8teIOEVA7gsELs3B8keC6w3D50JA0sHCDclJnoQ
        IG0TGWBAUorD2ei0yMqfsrWClZhpeoE6S1J6jpV7k5mUq7GDoKd9mqGSrbSqwcmgt7+SqrCQqK6kvMK7
        0dZ2jJNientHiJJqsqlARzd8emlTbF5roqcnJyQAExxFWmLK2+DW5eietbijvL+cvciYvs+Xvs9qkaKm
        trK0zdGXtsOGkMhJKcczC81ECtg6CN9YD+pUD9ZfL9h2RtZIJ9RoHOBgGelJE94/E9QuCcY6ENcXBJkd
        DI4EBEMJAj0RFVgLGGcFCFtMXJe2ztSxyMiXqq1PX2VjbnBxfX9CVFh/l5yXr7KJpauLpq2lvsSkucG2
        y9LA193B2d7E3ODD2tmVqLNMW15gjaJMYldESiU+OiRbcmw3WFYvPVBrhI/W6Ozq8/Xd5OnI1drJ29iz
        y9CeucNfc3hhe4YcMULH1t3DzdV5YNRWGOolB85dFeZxEO1KCN14IvZTFOBVEdxdOMhLFdVACtRUFuI6
        B8FKFM4jAskeBpkMBWkBAzQAAi4GBjEJB1MDCFdFU4+MorWUsLOTpq1ob351gom+y9NfbnebrrGcsq2s
        v8KXqq2muLvB0NO9zM+nv8Csw8XE293B1NevwsWTsLRUbHFUaXAqNh1RZVtDWFQiMzO4zNHd5+vp9Pjk
        7fLY3uPa4OXW5evb6N9ZZE0RFgpci5231dnJ2tuZi9tZMN1mFOpdFOtQDeFIC+BxHPZCCNxPF+M5B9ZT
        EONTHN5MF9o0BtxVGO4wDMU+DtkcCagKBHcCAkUGAU8FACYCBSoMC1QgK3RAY3twiqFse494f46ir7fE
        0dmTnKW/yM3T3dq3y86gs7eyxMfAz9LE0tWgt7qmvb+4z9G7ztG+0dS4x86ftLpVaXA0P0IhLC9TWmHD
        y8/v+fbo8/fp8/fd5enh5+zf5eng6fRwf201SCVJc4GrzdaKnbNUS6tcI+dkFut1HvNPDeROCuBWE+Zj
        FfBwHfI+CNw+CONOCuhCFdhtIuRfGd4aBNQxCsoqAcUcB6IFAY0DBXIJA1QEBTsGDx8gQG0KPYIeUH4/
        YXyAmKq2x9LG1tPR4t+jtLeer7a1x86rvLjH2Na7y8qwv8K4x8u4ycexw8DD1dLA09a3ys2/ys6+0NOX
        tLWar7LG0dXk7/Pl8/bn9ffj8vXW5OfW5OXc6OfZ5eTl7el9kpRKZ2+HlqXC0N2Eh9BHFtRRCt+GHfZZ
        E+6NKvcpBM05BttREuZZEeZgDutSDedPEeNeGORDDt4+C9h8Ge4vDsRaFt4LCasbB6sUCZocC4sFAkkb
        H0AvTIwzWYc9X3k7T1oyQ0y2x9HQ4d3T5OGuv8GLnaSbrbXD1NDE1dLK2tm+zdC/ztLB0s+9zsu4ycas
        v8LF2Nu0yMqyxcjC1tnY5unT4uW/ztDW5ejb6u3a6ezS4eTX5ebR3tzW4+Hk7fDc7e1jd3uIoKqPhdVo
        J+BlEvFkDu1TEeOFGvt2GfI4BNhZEepZDuRsHvVaC+h5IvpiFOdDFtpzJOk6D9UyCOM+CdUmB8kfCboy
        B8ErEMQiBbMbB4EsKmM4V4s+U21XaG5MU002QUBbbHTZ6ufN3tvD1degsrmgs7uuv7zO393K2tm1xMew
        v8PC09C4yMazxMKqvcCvwsWQra6htbfU3uK8w8d+kZSRo6bG1djN3N/c7O/Y5+rO3d7P3Nre6ujK1N7f
        6Onj7eynodWQVdtFBtldEOZoDPJiD+RFDudRC/E5DetVEelhFOlKCt5PDOZYEOtnEuh1H+pCENg1CtBj
        IeYpCMkpDc0rCMkrENAtCcCBLeV/LOIdCa0xGJY6SXxBUWw9Tlo5S1QiNDyRo67D2NfD19anvcZgeo6r
        ucrI2uDD1tXH1tm6ycy8y863xsm3xsqxxMexxMeuxMHC09CyvLppd3tYb3G5y87J2NvN3N/X3+S6wcaw
        ub+pvcTW2eS50Mu1y8Wfp9FGIdBpGelrHvBzGPNVB+dhEeaSLfd5F/o4DOR9G/SFI/FwG/J8HPNcD+Nl
        FepGD9iDLfZBC9QhBcpwGeYzDNg/CdgzBc53H+Y7CdBPFNYWBb9SIcggBKQtM49LWYdAVnQuSlU1T2Ky
        z9iux8qvxM1phJecqrq6zNPE19fO3eC5yMvE09awv8Krur2rvsGzxsnN2Ne6y8eZrqtacXOzxcjB0NPE
        09a3xcigtLeUpqmLoKWGpKm4yM+pusWvv8pjUMpHB92AJutLBe9mCPFoEPJuFe1hCOlkFvBiE+9KDOx6
        GvNWD+lVEuhsEOVsFelYEN9HDOI/D99fEOo9Bt9SEuYtCM85B8gmDbhrE+s7B8olCMYeBqgnCrMLAa4v
        DpgkKoMtT3M0Q2Fphpehx8qOr7KGn6aaqrWvwcm/ztXGz9fFzNuxwsqdrraUpa2gsriwwsnD09WitLZ/
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>